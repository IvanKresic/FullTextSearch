<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAICAAAAEAIACoEAAAJgAAABAQAAABACAAaAQAAM4QAAAoAAAAIAAAAEAAAAABACAAAAAAAAAQ
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC7u7szu7u7M7u7uzO7u7szu7u7M7u7u0K7u7tmu7u7Zru7
        u2a7u7tmu7u7Zru7u4S7u7uZu7u7mbu7u5m7u7uZu7u7mbu7u8a7u7vMu7u7zLu7u8y7u7vMu7u71bu7
        u/+7u7v/Q2aO/xNAdv8lWo//lKW09ru7u04AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAABNEfLwTQHb/E0mD/xhgn/9UlcX1E1ycCQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAATRHy8E0B2/xNJg/8WX57/f7re/4jD5v8TXJwhAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAE0R8vBNAdv8TSYP/Fl6d/47G5f+86fj/KG6o0AAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAABNEfLwTQHb/E0mD/xZenf+OxuX/vOn4/zN2rtcTXJwSAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAATRHy8E0B2/xNJg/8WXp3/jsbl/7zp+P8zdq7XE1ycEgAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAE0R8vBNAdv8TSYP/Fl6d/47F5P+86fj/M3au1xNc
        nBIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABNEfLwTQHb/E0mC/xZenf+OxeT/vOn4/zN2
        rtcTXJwSAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgP1/VFEB1/xNJgv8WXp3/jsXk/7zp
        +P8zdq7XE1ycFQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAlJGSDHZ0
        dHRqaWnRZ2Zm615dXPpfXV35Z2Zm62tpac14dnZtlJGSCQAAAAAAAAAAJT5U3TE6PP8zSFv/F12b/47F
        5P+76Pj/M3au1xNcnBUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAlJGSBnl3
        d5FhYF/6cm9r962ml/zLxLH/9OzS//Lqz//KwrD/qaGT+W9saPdiYWD5eXd3hzRET1A0PT7/RUxL/2Bm
        Z/+gs7r/vOj2/zN2rtcTXJwVAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJuZ
        mR9raWnod3Nu+Obbu//+79D//+vT///q2P//6dj//+rY///p1v//69L//u/O/97Ss/1ybmr1bGtr5U5X
        W+RZYGH/pbO2/8bl7f9bd4rxE1ycFQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AACQjY4ZZmVk9qujkvr+7Mv//uPN//7j0f/94s///eLP//3iz//94s///eHP//7j0P/+49D//+TM//7u
        yv+flon1aGZm96Kus/rG5e3/Wmt0+SFLbiYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAlJGSBm1ra+m2q5j6/d+///3awv/93cf//dzG//3awv/82L///Ne///zYwP/92sH//dvD//3c
        xv/928T//dnA//3jv/+qoJH5dnV1/Gp5gbgeT3cgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAB3dXWYkImC9vrauP/71Ln/+9S6//rStf/60rT//NGx//zPsf/80LH//NCy//zR
        sv/80rP/+9K1//vTt//71br/+tS4//rfuP+FgHv0dnR0igAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAg4CBEXBubffr0rL/9c2y//jQtP/4zrH/+c6v//rLq//6y6n//Mun//vL
        qP/8zKn/+8yr//rMrf/4y6z/98ut//fNr//2zbH/9s2x/+rWs/xsa2r0lJGSCQAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB0cnJ/nJOJ8vTIqv/yyKr/9cmr//fJqP/3xqP/+Mah//rG
        ov/7x6L//Mij//zIo//7x6L/+MSg//XDn//0wp//88Oi//LFpv/yxaf/9cuq/5GLgut3dXVrAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHh1dc3TuqD778Oj//DDov/xwqD/9cKf//bD
        oP/4xKD/+cWh//vHov/7x6L/+8ei//rGov/5xaH/+MSg//XCn//zwZ7/776c/+69nf/vwKD/0Lmf63Ny
        cr0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgoB/8eS/nv/tv53/7b2b//G+
        nf/zwJ7/9sOf//jEoP/5xaH/+sai//vHov/7x6L/+sai//nFof/3xKD/9cKf//PAnf/wvpv/7b2a/+q6
        mf/ivZ39fXt73gAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACHhIT967ua/+u7
        mf/tvJn/8L6b//PAnf/2w5//+MSh//nFof/6xqL/+sai//rGov/6xqL/+cWh//fEoP/1wp//8sCd/++9
        m//su5n/57eW/+e4l/+DgIDwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIyJ
        ivrmtpb/57eV/+y7mf/vvZv/88Cd//bDn//4xaH/+sii//rIo//6yKP/+sij//rIo//5x6H/98Wg//XC
        n//ywJ3/7r2a/+u6mP/ltZT/47WV/4iFheoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAjYmI5tyylf/nt5X/6rmX/+69mv/zwp7/9sag//nIof/6yaP/+8qk//vKpP/7yqT/+8qj//nI
        ov/4x6H/9cWg//HAnf/su5n/6bmX/+O0k//Yr5T8h4WF0gAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAACMiYm9zqyU+ea2lf/nt5X/7r+b//TGn//2x6D/+cqi//rLo//8zKT//Myk//zM
        pP/7zKT/+sqj//jIov/1xqD/8sSe/+u7mP/mtpX/47ST/8Smk+iOi4ynAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAIiGh3WsnJPm5LWU/+W2lf/wxJ3/9Mig//bJof/5y6L/+syj//vN
        pP/7zaT/+82k//vNpP/6zKP/+Mqh//XIoP/zxp//7cCa/+S1lP/ltZT/ppmS2pSRkl0AAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAY2FhG5aSku/es5X/57qX//LHnv/1yqD/9suh//jM
        ov/5zaP/+s6k//rOpP/6zqT/+s6j//nNo//3zKL/9cqh//TJoP/wxp3/47ST/9+0lvyVkZLplJGSDAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEj4yNf66dk+bouZb/88qf//TL
        oP/2zKH/+M+l//vhxv/97Nv//vTq//706v/97d3/++LI//fPpf/1zKH/9Mug//DGnf/ktZT/p5qS3ZGO
        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
</value>
  </data>
</root>